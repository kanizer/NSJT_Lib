/* *  * CHECK THIS OUT : http://henryjones.us/articles/using-the-as3-jpeg-encoder *  */ package com.plode.utils {	import flash.events.ActivityEvent;		import flash.display.BitmapData;	import flash.display.Sprite;	import flash.events.EventDispatcher;	import flash.events.StatusEvent;	import flash.geom.Matrix;	import flash.media.Camera;	import flash.media.Video;		//	import com.adobe.images.PNGEncoder;	//	import com.adobe.images.JPGEncoder;	/**	 * @author ns	 */	public class Webcam extends Sprite 	{		private var video : Video;		private var camara : Camera;//		private var sample : Bitmap;				// TODO - UPDATE DIMENSIONS		private var camW : uint = 640;		private var camH : uint = 480;		public function Webcam(w : int, h: int)		{			camW = w;			camH = h;			//Create a video instance			video = new Video( camW, camH );			addChild( video );		}		public function setupCam() : void		{			//Get the camera reference.			camara = Camera.getCamera( );			//setMode need 3 params, width, height and frame rate.			//Optianally you can set a boolean value at the end for the 	favorArea.			camara.setQuality( 0, 100 );			camara.setMode( camW, camH, 30 );			camara.addEventListener(StatusEvent.STATUS, statusHandler);			camara.addEventListener( ActivityEvent.ACTIVITY, onCamActivity)			//put the camera in the video instance			video.attachCamera( camara );			//			sample = new Bitmap();//			sample.smoothing = true;//			addChild(sample);		}				private function onCamActivity(event : ActivityEvent) : void		{//			trace("camera activity : " + event);//			trace("camera activity : " + event.activating);		}		private function statusHandler(event : StatusEvent) : void		{//			trace("camera status : " + event.code)		}		public function saveImage() : BitmapData 		{			// TODO - UPDATE SCALE			var scale : Number = 1;//.25;			var m : Matrix = new Matrix( );			m.scale( scale, scale );			var bmd : BitmapData = new BitmapData( camW * scale, camH * scale, false );			bmd.draw( video, m );//			sample.bitmapData = bmd;			return bmd;		} 				public function destroy() : void		{			video.attachCamera(null);			camara = null;		}	}}